syntax = "proto3";

package client;

// 找到一个rpc服务
message ServerAddress {
  string ip = 1;
  int32 port = 2;
}

// 从哪一个服务中获取哪个文件
message FilePath {
  ServerAddress serverAddress = 1;
  string path = 2;
}

// 定义文件内容块结构体
message FileChunk {
  bytes content = 1;  // 每次返回的数据块
}


// 定义读取文件请求结构体
message ReadFileRequest {
	FilePath filePath = 1;  // 要读取的文件路径
}

// 定义任务完成汇报请求结构体
message ReportCompletionRequest {
	string jobID = 1;
	repeated FilePath filePaths = 2;
}

// 定义任务完成汇报响应结构体
message ReportCompletionResponse {
	bool success = 1;
}

service ClientSrvice {
	// worker -> client, worker从client获取文件，执行Map Task
	rpc ReadFile(ReadFileRequest) returns (stream FileChunk);
	// master -> client, master 向client汇报，整个任务都完成了
	// 并告知client去哪里拉取分散在worker节点中，Reduce任务的产物
	rpc ReportCompletion(ReportCompletionRequest) returns (ReportCompletionResponse);
}

