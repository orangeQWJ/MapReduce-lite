syntax = "proto3";

package worker;

// 找到一个rpc服务
message ServerAddress {
  string ip = 1;
  int32 port = 2;
}

// 从哪一个服务中获取哪个文件
message FilePath {
  ServerAddress serverAddress = 1;
  string path = 2;
}

// 定义文件内容块结构体
message FileChunk {
  bytes content = 1;  // 每次返回的数据块
}

// 定义任务类型枚举
enum TaskType {
  M = 0;  // Map 任务
  R = 1;  // Reduce 任务
}



// 定义读取文件请求结构体
message ReadFileRequest {
	FilePath file_path = 1;  // 要读取的文件路径
}


message JustDoItRquest {
	string job_id = 1;
	TaskType task_type = 2;           // 任务类型
	int32 task_id = 3;                // 任务编号
	FilePath python_file_path = 4;
	repeated FilePath file_paths = 5; // 任务涉及的文件路径列表
}

message JustDoItResponse {
	bool success = 1;  // 注册是否成功
}

service WorkerSrvice {
	// 读取大文件服务，使用流式 RPC 传输数据
	// worker->worker, client->worker
	rpc ReadFile(ReadFileRequest) returns (stream FileChunk);
	// master->worker, master 下发m/r task
	rpc JustDoIt(JustDoItRquest) returns (JustDoItResponse);
}
